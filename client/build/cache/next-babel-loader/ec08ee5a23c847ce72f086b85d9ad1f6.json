{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport classnames from 'classnames';\nimport CssToolTip from './CssToolTip';\nexport default function TableBody(_ref) {\n  var page = _ref.page,\n      prepareRow = _ref.prepareRow,\n      send = _ref.send;\n  return __jsx(\"tbody\", null, page.map(function (row, i) {\n    var bg = 'bg-gray-100';\n\n    if (i % 2 == 0) {\n      bg = 'bg-gray-100';\n    } else {\n      bg = 'bg-white';\n    }\n\n    prepareRow(row);\n    return __jsx(\"tr\", _extends({}, row.getRowProps(), {\n      id: row.cells[0].value,\n      className: classnames(bg, 'border hover:bg-gray-400 flex lg:table-row flex-wrap mb-1 mt-1 lg:mb-0')\n    }), row.cells.map(function (cell) {\n      if (cell.column.Header == 'Stock lvl' && cell.row.original.delivery != null) {\n        if (cell.value < 14) {\n          if (cell.value < 5) {\n            var cl = 'bg-red-400';\n            send.push(row.cells[0].value);\n          } else {\n            var cl = 'bg-yellow-400'; // med.push(row.cells[0].value);\n          }\n        } else {\n          var cl = 'bg-green-400';\n        }\n\n        var tl = cell.value < 14 ? cell.value < 5 ? 'text-red-800' : 'text-yellow-800' : 'text-green-800'; // console.log(cell.value);\n\n        return __jsx(\"td\", _extends({\n          className: \"px-5 py-5 lg:table-cell\"\n        }, cell.getCellProps()), __jsx(\"span\", {\n          className: classnames(tl, 'relative block text-center px-2 py-2 font-semibold leading-tight')\n        }, __jsx(\"span\", {\n          \"aria-hidden\": true,\n          className: classnames(cl, 'absolute inset-0 opacity-50 rounded-full')\n        }), __jsx(\"span\", {\n          className: \"relative\"\n        }, __jsx(\"p\", null, cell.value < 14 ? cell.value < 5 ? 'Low' : 'Medium' : 'High'))), __jsx(\"p\", {\n          className: \"relative block text-center px-2 py-2 text-semi-bold\"\n        }, cell.row.original.delivery));\n      } else if (cell.column.Header == 'Dietary restrictions') {\n        return __jsx(\"td\", _extends({\n          className: \"px-5 py-5 lg:table-cell\"\n        }, cell.getCellProps()), typeof cell.value != 'undefined' || cell.value != null || cell.value != '' ? __jsx(CssToolTip, {\n          data: cell.value,\n          text: 'Generic Restriction Text'\n        }) : __jsx(\"p\", {\n          className: \"text-center text-gray-900\"\n        }, 'None'));\n      } else if (cell.column.Header != 'Id') {\n        if (cell.column.Header == 'Stock lvl') {\n          send.push(row.cells[0].value);\n        }\n\n        return __jsx(\"td\", _extends({\n          className: \"px-5 py-5 lg:table-cell\"\n        }, cell.getCellProps()), typeof cell.value == 'undefined' || cell.value == null || cell.value == '' ? __jsx(\"p\", {\n          className: \"text-center text-gray-900 underline\"\n        }, \"None\") : __jsx(\"p\", {\n          className: \"text-center text-gray-900\"\n        }, typeof cell.value == 'undefined' || cell.value == null || cell.value == '' ? 'None' : cell.value));\n      } else {\n        return __jsx(\"td\", _extends({\n          className: \"px-5 py-5 lg:table-cell\"\n        }, cell.getCellProps()), cell.value); // return <td className='hidden' key={cell.value}></td>;\n      }\n    }));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}