{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport Alert from \"./alerts/Alert\";\nimport { useAuth } from '../../providers/Auth';\nimport { useState } from 'react';\nexport default function LoginForm({\n  setLoading,\n  stopLoading\n}) {\n  const {\n    0: email,\n    1: setEmail\n  } = useState(null);\n  const {\n    0: password,\n    1: setPassword\n  } = useState(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: status,\n    1: setStatus\n  } = useState(null); //const url = 'https://g1t3-node-auth-srv.cfapps.us10.hana.ondemand.com/api/login';\n  //const url = 'http://localhost:5000/api/login';\n\n  const url = '/api/login';\n  const auth = useAuth();\n\n  const closeAlert = e => {\n    setError(false);\n  };\n\n  const handleChange = e => {\n    let id = e.target.getAttribute('id');\n\n    if (id == 'email') {\n      setEmail(e.target.value);\n    } else if (id == 'login-password') {\n      setPassword(e.target.value);\n    }\n\n    ;\n  };\n\n  const handleSubmit = async e => {\n    setLoading();\n    e.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        \"email\": email,\n        \"password\": password\n      })\n    };\n\n    try {\n      const response = await fetch(url, requestOptions);\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"logged in!\");\n        auth.setName(data.email);\n        auth.setRole(data.role);\n        auth.setAuth(true);\n        Router.push('/home');\n      } else {\n        // invalid params\n        setError(true);\n        setStatus('Wrong email or password!');\n      }\n    } catch (error) {\n      setError(true);\n      setStatus('Auth server might be down!');\n    }\n\n    stopLoading();\n  };\n\n  const wrapperFunction = async e => {\n    handleSubmit(e);\n  };\n\n  return __jsx(\"div\", null, error ? __jsx(Alert, {\n    status: status,\n    close: closeAlert\n  }) : null, __jsx(\"form\", {\n    onSubmit: wrapperFunction\n  }, __jsx(\"div\", {\n    className: \"mb-4\"\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\"\n  }, \"Email\"), __jsx(\"input\", {\n    required: true,\n    onChange: handleChange,\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email\"\n  })), __jsx(\"div\", {\n    className: \"mb-6\"\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\"\n  }, \"Password\"), __jsx(\"input\", {\n    required: true,\n    onChange: handleChange,\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"login-password\",\n    type: \"password\",\n    placeholder: \"******************\",\n    autoComplete: \"off\"\n  }), __jsx(\"p\", {\n    className: \"text-red-500 text-xs italic hidden\"\n  }, \"Please choose a password.\")), __jsx(\"div\", {\n    className: \"mb-6\"\n  }, __jsx(\"input\", {\n    className: \"cursor-pointer w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n    type: \"submit\",\n    id: \"login\",\n    name: \"login\",\n    value: \"Login\"\n  }), __jsx(\"p\", {\n    className: \"lg:flex lg:justify-center font-bold text-sm text-blue-500 hover:text-blue-800 mt-5\",\n    href: \"#\"\n  }, \"Forgot Password?\"))));\n}","map":null,"metadata":{},"sourceType":"module"}