{"ast":null,"code":"var _jsxFileName = \"/Users/seanjin/Documents/EBS/project/G1T3-frontend/client/pages/home.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//https://github.com/SAPConversationalAI/Webchat\nimport Head from \"next/head\";\nimport { useState } from \"react\";\nimport Footer from \"../components/front/Footer\";\nimport Header from \"../components/homepage/header/Header\";\nimport SubHeader from \"../components/homepage/header/SubHeader\";\nimport Table from \"../components/homepage/table/Table\";\nimport withAuth from \"../hocs/withAuth\";\nimport { getName, getRole, useIsAuthenticated } from \"../providers/Auth\"; // use back with auth\n\nexport default withAuth(function Home({\n  data\n}) {\n  console.log(\"one\");\n  const isAuthenticated = useIsAuthenticated();\n  const name = getName();\n  const role = getRole();\n  const {\n    0: send,\n    1: setSend\n  } = useState([]);\n  window.webchatMethods = {\n    getMemory: conversationId => {\n      const memory = {\n        ids: Array.from(new Set(send))\n      };\n      return {\n        memory,\n        merge: true\n      };\n    }\n  };\n  return __jsx(\"div\", {\n    className: \"flex flex-col h-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"script\", {\n    src: \"https://cdn.cai.tools.sap/webchat/webchat.js\" // exposing credentials\n    ,\n    channelId: \"410590c5-18d4-483f-b510-4ce74feac089\",\n    token: \"2fffea9e69dda5b5e0a310e686961d96\",\n    id: \"cai-webchat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), __jsx(Header, {\n    name: name,\n    role: role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), __jsx(SubHeader, {\n    name: name,\n    role: role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"antialiased bg-gray-200 flex-grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"container mx-auto px-4 sm:px-8 mt-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    odata: data,\n    send: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n}); // To-do: Cache request data\n// https://stackoverflow.com/questions/62005208/api-caching-for-next-js\n// known bug\n// fetches data even if not logged in\n\nexport async function getStaticProps() {\n  console.log(\"attempting to fetch data\"); //fetch odata\n\n  try {\n    const response = await fetch( //\"https://smucf-dev-ebs-g1t3-srv.cfapps.us10.hana.ondemand.com/api/Beneficiary\"\n    \"https://smucf-dev-ebs-g1t3-srv.cfapps.us10.hana.ondemand.com/api/Beneficiary?$expand=regionID,Stocks\");\n    var data = await response.json();\n    data = data.value;\n  } catch (error) {\n    let data = {};\n    console.log(\"Error fetching odata\");\n    return {\n      props: {\n        data\n      },\n      revalidate: 3600\n    };\n  } // final object for prediction\n\n\n  let stocks = {\n    data: []\n  };\n  let order = [\"id\", \"house\", \"biscuit\", \"Egg\", \"vege\", \"rice\", \"canned\", \"beverage\", \"instant\", \"bread\"];\n  let today = new Date();\n  today = today.getMonth() + \"/\" + today.getDate() + \"/\" + today.getFullYear();\n\n  for (var i = 0; i < data.length; i++) {\n    // if have stock\n    if (data[i].Stocks.length != 0) {\n      let innerData = {\n        id: data[i].beneficiaryID,\n        house: data[i].householdSize\n      };\n      let ordered = {};\n\n      for (var k = 0; k < data[i].Stocks.length; k++) {\n        innerData[data[i].Stocks[k].stock_stockID] = data[i].Stocks[k].stockCount;\n      } // ordering\n\n\n      for (var k = 0; k < order.length; k++) {\n        ordered[order[k]] = typeof innerData[order[k]] == \"undefined\" ? 0 : innerData[order[k]];\n      }\n\n      stocks.data.push(ordered);\n      data[i].delivery = today;\n    } // console.log(data[i]);\n\n  }\n\n  if (stocks.length > 0) {\n    console.log(\"Querying prediction api\");\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(stocks)\n    };\n    var prediction;\n\n    try {\n      // let prediction = await fetch(\"http://127.0.0.1:5000/api/predict\", options);\n      let prediction = await fetch(\"https://g1t3-foodstock-quick-wallaby-xx.cfapps.us10.hana.ondemand.com/api/predict\", options);\n      prediction = await prediction.json();\n      var map = new Map();\n\n      for (var i = 0; i < prediction.length; i++) {\n        map.set(prediction[i][\"id\"], prediction[i][\"result\"]);\n      }\n\n      for (let i = 0; i < data.length; i++) {\n        // if have stock\n        if (data[i].Stocks.length != 0) {\n          data[i].stock = map.get(data[i].beneficiaryID);\n        } // console.log(data[i]);\n\n      }\n    } catch (error) {\n      console.log(\"Error posting to prediction api\");\n      console.log(error);\n    }\n  }\n\n  console.log(\"Sucessfully fetched data\");\n  return {\n    props: {\n      data\n    },\n    revalidate: 3600\n  };\n}","map":{"version":3,"sources":["/Users/seanjin/Documents/EBS/project/G1T3-frontend/client/pages/home.js"],"names":["Head","useState","Footer","Header","SubHeader","Table","withAuth","getName","getRole","useIsAuthenticated","Home","data","console","log","isAuthenticated","name","role","send","setSend","window","webchatMethods","getMemory","conversationId","memory","ids","Array","from","Set","merge","getStaticProps","response","fetch","json","value","error","props","revalidate","stocks","order","today","Date","getMonth","getDate","getFullYear","i","length","Stocks","innerData","id","beneficiaryID","house","householdSize","ordered","k","stock_stockID","stockCount","push","delivery","options","method","headers","body","JSON","stringify","prediction","map","Map","set","stock","get"],"mappings":"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","sourcesContent":["//https://github.com/SAPConversationalAI/Webchat\n\nimport Head from \"next/head\";\nimport { useState } from \"react\";\nimport Footer from \"../components/front/Footer\";\nimport Header from \"../components/homepage/header/Header\";\nimport SubHeader from \"../components/homepage/header/SubHeader\";\nimport Table from \"../components/homepage/table/Table\";\nimport withAuth from \"../hocs/withAuth\";\nimport { getName, getRole, useIsAuthenticated } from \"../providers/Auth\";\n\n// use back with auth\nexport default withAuth(function Home({ data }) {\n  console.log(\"one\");\n\n  const isAuthenticated = useIsAuthenticated();\n  const name = getName();\n  const role = getRole();\n  const [send, setSend] = useState([]);\n\n  window.webchatMethods = {\n    getMemory: (conversationId) => {\n      const memory = { ids: Array.from(new Set(send)) };\n      return { memory, merge: true };\n    },\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen\">\n      <Head>\n        <script\n          src=\"https://cdn.cai.tools.sap/webchat/webchat.js\"\n          // exposing credentials\n          channelId=\"410590c5-18d4-483f-b510-4ce74feac089\"\n          token=\"2fffea9e69dda5b5e0a310e686961d96\"\n          id=\"cai-webchat\"\n        ></script>\n      </Head>\n\n      <Header name={name} role={role} />\n\n      <SubHeader name={name} role={role} />\n\n      <div className=\"antialiased bg-gray-200 flex-grow\">\n        <div className=\"container mx-auto px-4 sm:px-8 mt-18\">\n          <Table odata={data} send={send} />\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n});\n\n// To-do: Cache request data\n// https://stackoverflow.com/questions/62005208/api-caching-for-next-js\n\n// known bug\n// fetches data even if not logged in\nexport async function getStaticProps() {\n  console.log(\"attempting to fetch data\");\n  //fetch odata\n  try {\n    const response = await fetch(\n      //\"https://smucf-dev-ebs-g1t3-srv.cfapps.us10.hana.ondemand.com/api/Beneficiary\"\n      \"https://smucf-dev-ebs-g1t3-srv.cfapps.us10.hana.ondemand.com/api/Beneficiary?$expand=regionID,Stocks\"\n    );\n    var data = await response.json();\n    data = data.value;\n  } catch (error) {\n    let data = {};\n    console.log(\"Error fetching odata\");\n    return {\n      props: {\n        data,\n      },\n      revalidate: 3600,\n    };\n  }\n\n  // final object for prediction\n  let stocks = {\n    data: [],\n  };\n  let order = [\n    \"id\",\n    \"house\",\n    \"biscuit\",\n    \"Egg\",\n    \"vege\",\n    \"rice\",\n    \"canned\",\n    \"beverage\",\n    \"instant\",\n    \"bread\",\n  ];\n  let today = new Date();\n  today = today.getMonth() + \"/\" + today.getDate() + \"/\" + today.getFullYear();\n\n  for (var i = 0; i < data.length; i++) {\n    // if have stock\n    if (data[i].Stocks.length != 0) {\n      let innerData = {\n        id: data[i].beneficiaryID,\n        house: data[i].householdSize,\n      };\n      let ordered = {};\n      for (var k = 0; k < data[i].Stocks.length; k++) {\n        innerData[data[i].Stocks[k].stock_stockID] =\n          data[i].Stocks[k].stockCount;\n      }\n\n      // ordering\n      for (var k = 0; k < order.length; k++) {\n        ordered[order[k]] =\n          typeof innerData[order[k]] == \"undefined\" ? 0 : innerData[order[k]];\n      }\n      stocks.data.push(ordered);\n      data[i].delivery = today;\n    }\n    // console.log(data[i]);\n  }\n\n  if (stocks.length > 0) {\n    console.log(\"Querying prediction api\");\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(stocks),\n    };\n    var prediction;\n\n    try {\n      // let prediction = await fetch(\"http://127.0.0.1:5000/api/predict\", options);\n      let prediction = await fetch(\n        \"https://g1t3-foodstock-quick-wallaby-xx.cfapps.us10.hana.ondemand.com/api/predict\",\n        options\n      );\n      prediction = await prediction.json();\n      var map = new Map();\n      for (var i = 0; i < prediction.length; i++) {\n        map.set(prediction[i][\"id\"], prediction[i][\"result\"]);\n      }\n\n      for (let i = 0; i < data.length; i++) {\n        // if have stock\n        if (data[i].Stocks.length != 0) {\n          data[i].stock = map.get(data[i].beneficiaryID);\n        }\n        // console.log(data[i]);\n      }\n    } catch (error) {\n      console.log(\"Error posting to prediction api\");\n      console.log(error);\n    }\n  }\n\n  console.log(\"Sucessfully fetched data\");\n  return {\n    props: {\n      data,\n    },\n    revalidate: 3600,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}