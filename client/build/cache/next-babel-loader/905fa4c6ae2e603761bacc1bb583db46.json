{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Header from '../components/homepage/header/Header';\nimport SubHeader from '../components/homepage/header/SubHeader';\nimport Footer from '../components/front/Footer';\nimport Table from '../components/homepage/table/Table';\nimport withAuth from '../hocs/withAuth';\nimport { getName, getRole, useIsAuthenticated, useAuth } from '../providers/Auth';\nimport Title from '../components/schedule/Title';\nimport ScheduleForm from '../components/schedule/ScheduleForm';\nimport ScheduleList from '../components/schedule/ScheduleList';\nimport ScheduleListContextProvider from '../components/schedule/context/ScheduleListContext';\nimport Wat from '../components/test/API'; // use back with auth\n\nexport default withAuth(function Home({\n  data\n}) {\n  console.log('one');\n  const isAuthenticated = useIsAuthenticated();\n  const name = getName();\n  const role = getRole();\n  return __jsx(\"div\", {\n    className: \"flex flex-col h-screen\"\n  }, __jsx(Header, null), __jsx(SubHeader, {\n    name: name,\n    role: role\n  }), __jsx(\"div\", {\n    className: \"antialiased bg-gray-200 flex-grow\"\n  }, __jsx(ScheduleListContextProvider, null, __jsx(Title, null), __jsx(\"div\", {\n    className: \"main\"\n  }, __jsx(ScheduleForm, null), __jsx(Wat, null), __jsx(ScheduleList, null), __jsx(\"h1\", null, \"heyheyhey\")))), __jsx(Footer, null));\n});\nexport async function getStaticProps() {\n  console.log('attempting to fetch data'); //fetch odata\n\n  try {\n    const response = await fetch('https://smucf-dev-ebs-g1t3-srv.cfapps.us10.hana.ondemand.com/api/Schedule');\n    var data = await response.json();\n    data = data.value;\n    console.log(data);\n  } catch (error) {\n    let data = {};\n    console.log('Error fetching odata');\n    return {\n      props: {\n        data\n      },\n      revalidate: 3600\n    };\n  } // final object for prediction\n\n\n  let stocks = {\n    data: []\n  };\n  return {\n    props: {\n      data\n    },\n    revalidate: 3600\n  };\n}","map":null,"metadata":{},"sourceType":"module"}