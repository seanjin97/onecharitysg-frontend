{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/seanjin/Documents/EBS/project/G1T3-frontend/client/hocs/withAuthRedirect.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../providers/Auth\"; // components rendering twice is because of strict mode\n\nfunction DefaultLoadingFallback() {\n  return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 10\n    }\n  }, \"Loading...\");\n}\n\n_c = DefaultLoadingFallback;\nexport default function withAuthRedirect(_ref) {\n  var _this = this,\n      _s = $RefreshSig$();\n\n  var WrappedComponent = _ref.WrappedComponent,\n      _ref$LoadingComponent = _ref.LoadingComponent,\n      LoadingComponent = _ref$LoadingComponent === void 0 ? DefaultLoadingFallback : _ref$LoadingComponent,\n      expectedAuth = _ref.expectedAuth,\n      location = _ref.location;\n\n  var WithAuthRedirectWrapper = function WithAuthRedirectWrapper(props) {\n    _s();\n\n    var router = useRouter();\n\n    var _useAuth = useAuth(),\n        isLoading = _useAuth.isLoading,\n        isAuthenticated = _useAuth.isAuthenticated;\n\n    if (isLoading) {\n      return __jsx(LoadingComponent, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (true && expectedAuth !== isAuthenticated) {\n      console.log(\"logged in? \" + isAuthenticated);\n      router.push(location);\n      return __jsx(React.Fragment, null);\n    }\n\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  _s(WithAuthRedirectWrapper, \"Q1SPfueW2X8iICbodEdjfelikBo=\", false, function () {\n    return [useRouter, useAuth];\n  });\n\n  return WithAuthRedirectWrapper;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultLoadingFallback\");","map":{"version":3,"sources":["/Users/seanjin/Documents/EBS/project/G1T3-frontend/client/hocs/withAuthRedirect.js"],"names":["useRouter","useAuth","DefaultLoadingFallback","withAuthRedirect","WrappedComponent","LoadingComponent","expectedAuth","location","WithAuthRedirectWrapper","props","router","isLoading","isAuthenticated","console","log","push"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,mBAAxB,C,CAEA;;AACA,SAASC,sBAAT,GAAkC;AAChC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;KAFQA,sB;AAIT,eAAe,SAASC,gBAAT,OAKZ;AAAA;AAAA;;AAAA,MAJDC,gBAIC,QAJDA,gBAIC;AAAA,mCAHDC,gBAGC;AAAA,MAHDA,gBAGC,sCAHkBH,sBAGlB;AAAA,MAFDI,YAEC,QAFDA,YAEC;AAAA,MADDC,QACC,QADDA,QACC;;AACD,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAW;AAAA;;AACzC,QAAMC,MAAM,GAAGV,SAAS,EAAxB;;AADyC,mBAGFC,OAAO,EAHL;AAAA,QAGjCU,SAHiC,YAGjCA,SAHiC;AAAA,QAGtBC,eAHsB,YAGtBA,eAHsB;;AAIzC,QAAID,SAAJ,EAAe;AACb,aAAO,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAI,QAAiCL,YAAY,KAAKM,eAAtD,EAAuE;AACrEC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBF,eAA5B;AACAF,MAAAA,MAAM,CAACK,IAAP,CAAYR,QAAZ;AACA,aAAO,2BAAP;AACD;;AAED,WAAO,MAAC,gBAAD,eAAsBE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAfD;;AADC,KACKD,uBADL;AAAA,YAEgBR,SAFhB,EAIwCC,OAJxC;AAAA;;AAkBD,SAAOO,uBAAP;AACD","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useAuth } from \"../providers/Auth\";\n\n// components rendering twice is because of strict mode\nfunction DefaultLoadingFallback() {\n  return <p>Loading...</p>;\n}\n\nexport default function withAuthRedirect({\n  WrappedComponent,\n  LoadingComponent = DefaultLoadingFallback,\n  expectedAuth,\n  location,\n}) {\n  const WithAuthRedirectWrapper = (props) => {\n    const router = useRouter();\n\n    const { isLoading, isAuthenticated } = useAuth();\n    if (isLoading) {\n      return <LoadingComponent />;\n    }\n\n    if (typeof window !== \"undefined\" && expectedAuth !== isAuthenticated) {\n      console.log(\"logged in? \" + isAuthenticated);\n      router.push(location);\n      return <></>;\n    }\n\n    return <WrappedComponent {...props} />;\n  };\n\n  return WithAuthRedirectWrapper;\n}\n"]},"metadata":{},"sourceType":"module"}