{"ast":null,"code":"var __jsx = React.createElement;\nimport { SettingsSharp } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nexport default function User({\n  data\n}) {\n  const {\n    0: options,\n    1: setOptions\n  } = useState({});\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: status,\n    1: setStatus\n  } = useState(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  const editType = async e => {\n    console.log(\"Sending\");\n    const url = \"https://cors-anywhere.herokuapp.com/https://smucf-dev-ebs-g1t3-srv.cfapps.us10.hana.ondemand.com/api/User('\" + e.target.id + \"')\";\n    const payLoad = {};\n    const id = e.target.id;\n    const value = options[e.target.id];\n    let op = options;\n    op[id] = value;\n    payLoad[\"userType\"] = value; // console.log(payLoad);\n\n    let requestOptions = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payLoad)\n    };\n\n    try {\n      const response = await fetch(url, requestOptions);\n      const data = await response.json();\n\n      if (response.ok) {\n        setOptions(op);\n        setShow(true);\n        setError(false);\n        setStatus(\"Edit complete\");\n        console.log(\"success\");\n      } else {\n        console.log(\"some problem\"); // console.log(data.error.message);\n\n        setShow(false);\n        setError(true);\n        setStatus(\"Problem editing user!\");\n      }\n    } catch (error) {\n      console.log(\"error\");\n      setShow(false);\n      setError(true);\n      setStatus(\"Problem reaching server!\");\n    }\n\n    console.log(\"Out\");\n  };\n\n  const pushOptions = e => {\n    let key = e.target.id;\n    let value = e.target.value;\n    options[key] = value;\n    console.log(options);\n  };\n\n  const close = () => {\n    setError(false);\n    setShow(false);\n  };\n\n  const GreenAlert = () => {\n    return __jsx(\"div\", {\n      className: \"w-2/4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4  mx-auto\",\n      role: \"alert\"\n    }, __jsx(\"span\", {\n      className: \"block sm:inline\"\n    }, \" \", status, \"  \"), __jsx(\"span\", {\n      className: \"absolute top-0 bottom-0 right-0 px-4 py-3\",\n      onClick: close\n    }, __jsx(\"svg\", {\n      className: \"fill-current h-6 w-6 text-green-500\",\n      role: \"button\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 20 20\"\n    }, __jsx(\"title\", null, \"Close\"), __jsx(\"path\", {\n      d: \"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\"\n    }))));\n  };\n\n  const RedAlert = () => {\n    return __jsx(\"div\", {\n      className: \"w-2/4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4 mx-auto\",\n      role: \"alert\"\n    }, __jsx(\"span\", {\n      className: \"block sm:inline\"\n    }, status), __jsx(\"span\", {\n      className: \"absolute top-0 bottom-0 right-0 px-4 py-3\",\n      onClick: close\n    }, __jsx(\"svg\", {\n      className: \"fill-current h-6 w-6 text-red-500\",\n      role: \"button\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 20 20\"\n    }, __jsx(\"title\", null, \"Close\"), __jsx(\"path\", {\n      d: \"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\"\n    }))));\n  };\n\n  return __jsx(\"div\", null, show ? __jsx(GreenAlert, null) : null, error ? __jsx(RedAlert, null) : null, __jsx(\"table\", {\n    className: \"min-w-full divide-y divide-gray-200\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n    className: \"px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\"\n  }, \"Name\"), __jsx(\"th\", {\n    className: \"px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\"\n  }, \"Email\"), __jsx(\"th\", {\n    className: \"px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\"\n  }, \"UserType\"), __jsx(\"th\", {\n    className: \"px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\"\n  }, \"Edit Type\"), __jsx(\"th\", {\n    className: \"px-6 py-3 bg-gray-50\"\n  }))), __jsx(\"tbody\", {\n    className: \"bg-white divide-y divide-gray-200\"\n  }, data.map((row, i) => (options[row.userID] = row.userType, __jsx(\"tr\", {\n    key: i,\n    className: \"flex lg:table-row flex-wrap\"\n  }, __jsx(\"td\", {\n    className: \"px-6 py-4 whitespace-no-wrap\"\n  }, __jsx(\"div\", {\n    className: \"text-sm leading-5 text-gray-900\"\n  }, row.name)), __jsx(\"td\", {\n    className: \"px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500\"\n  }, __jsx(\"p\", null, row.email ? row.email : \"None\")), __jsx(\"td\", {\n    className: \"px-6 py-4 whitespace-no-wrap\"\n  }, options[row.userID] == null ? __jsx(\"span\", {\n    className: \"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-200 text-gray-800\"\n  }, \"None\") : options[row.userID] == \"volunteer\" ? __jsx(\"span\", {\n    className: \"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-200 text-green-800\"\n  }, options[row.userID]) : options[row.userID] == \"Admin\" ? __jsx(\"span\", {\n    className: \"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-200 text-blue-800\"\n  }, options[row.userID]) : __jsx(\"span\", {\n    className: \"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-200 text-red-800\"\n  }, options[row.userID])), __jsx(\"td\", {\n    className: \"px-6 py-4 whitespace-no-wrap text-right text-sm leading-5 font-medium\"\n  }, __jsx(\"select\", {\n    name: \"types\",\n    id: row.userID,\n    className: \"float-left\",\n    onChange: pushOptions\n  }, __jsx(\"option\", {\n    value: true,\n    \"data-isdefault\": \"true\"\n  }, \"--Edit--\"), __jsx(\"option\", {\n    value: \"volunteer\"\n  }, \"Volunteer\"), __jsx(\"option\", {\n    value: \"admin\"\n  }, \"Admin\"), __jsx(\"option\", {\n    value: \"msf\"\n  }, \"MSF\"), __jsx(\"option\", {\n    value: \"none\"\n  }, \"None\"))), __jsx(\"td\", {\n    className: \"px-6 py-4 whitespace-no-wrap text-right text-sm leading-5 font-medium\"\n  }, __jsx(\"button\", {\n    className: \"text-indigo-600 hover:text-indigo-900\",\n    id: row.userID,\n    onClick: editType\n  }, \"Save\"))))))));\n}","map":null,"metadata":{},"sourceType":"module"}