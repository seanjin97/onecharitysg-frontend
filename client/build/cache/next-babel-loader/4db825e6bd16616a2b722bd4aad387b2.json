{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../providers/Auth\"; // components rendering twice is because of strict mode\n\nfunction DefaultLoadingFallback() {\n  return __jsx(\"p\", null, \"Loading...\");\n}\n\nexport default function withAuthRedirect(_ref) {\n  var WrappedComponent = _ref.WrappedComponent,\n      _ref$LoadingComponent = _ref.LoadingComponent,\n      LoadingComponent = _ref$LoadingComponent === void 0 ? DefaultLoadingFallback : _ref$LoadingComponent,\n      expectedAuth = _ref.expectedAuth,\n      location = _ref.location;\n\n  var WithAuthRedirectWrapper = function WithAuthRedirectWrapper(props) {\n    var router = useRouter();\n\n    var _useAuth = useAuth(),\n        isLoading = _useAuth.isLoading,\n        isAuthenticated = _useAuth.isAuthenticated;\n\n    if (isLoading) {\n      return __jsx(LoadingComponent, null);\n    }\n\n    if (true && expectedAuth !== isAuthenticated) {\n      console.log(\"logged in? \" + isAuthenticated);\n      router.push(location);\n      return __jsx(React.Fragment, null);\n    }\n\n    return __jsx(WrappedComponent, props);\n  };\n\n  return WithAuthRedirectWrapper;\n}","map":null,"metadata":{},"sourceType":"module"}