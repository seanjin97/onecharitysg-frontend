{"ast":null,"code":"var _jsxFileName = \"/mnt/d/G1T3-frontend/client/components/schedule/ScheduleForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, Component } from 'react';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport Icon from '@material-ui/core/Icon';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1)\n    }\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nclass Postt extends Component {\n  async postData(e) {\n    try {\n      // e.preventDefault();\n      // prevent page reload everytime form submission is done\n      let result = await fetch(\"https://cors-anywhere.herokuapp.com/https://smucf-dev-ebs-g1t3-srv.cfapps.us10.hana.ondemand.com/api/Schedule\", {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(e)\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n}\n\nfunction Form() {\n  const classes = useStyles();\n  const {\n    0: inputFields,\n    1: setInputFields\n  } = useState([{\n    date: '',\n    startTime: '',\n    charity_charityID: '',\n    Details: [{\n      deliverStatus: \"NotCompleted\",\n      parent_scheduleID: '',\n      volunteer_userID: '',\n      beneficiary_beneficiaryID: '',\n      Food_BasketID: \"\"\n    }]\n  }]);\n  const hardcode = {\n    \"date\": \"2020-11-08\",\n    \"startTime\": \"9:00 AM\",\n    \"charity_charityID\": \"charity001\",\n    \"Details\": [{\n      \"deliverStatus\": \"NotCompleted\",\n      \"parent_scheduleID\": \"newtest\",\n      \"volunteer_userID\": \"user001\",\n      \"beneficiary_beneficiaryID\": \"bene001\",\n      \"Food_BasketID\": \"01\"\n    }]\n  };\n\n  async function posttoreview(e) {\n    const postres = await fetch(\"https://cors-anywhere.herokuapp.com/https://smucf-dev-ebs-g1t3-srv.cfapps.us10.hana.ondemand.com/api/Schedule\", {\n      method: 'POST',\n      // or 'PUT'\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(e)\n    });\n    const postresult = await postres.json();\n    return postresult;\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // prevent page reload everytime form submission is done\n\n    console.log(\"InputFields\", inputFields);\n    const result = await fetch(\"https://cors-anywhere.herokuapp.com/https://smucf-dev-ebs-g1t3-srv.cfapps.us10.hana.ondemand.com/api/Schedule\", {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(inputFields)\n    }); // } catch(e){\n    //   console.log(e)\n    // }\n  }\n\n  ;\n\n  const handleChangeInput = (index, event) => {\n    const values = [...inputFields];\n    values[index][event.target.name] = event.target.value;\n    setInputFields(values);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, // { firstName: '', \n    // lastName: '', \n    // volunteer_userID: '', \n    // beneficiary_beneficiaryID:'' \n    // },\n    {\n      date: '',\n      startTime: '',\n      charity_charityID: '',\n      Details: [{\n        deliverStatus: \"NotCompleted\",\n        parent_scheduleID: '',\n        volunteer_userID: '',\n        beneficiary_beneficiaryID: '',\n        Food_BasketID: \"\"\n      }]\n    }]);\n  };\n\n  const handleRemoveFields = index => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, inputFields.map((inputField, index) => __jsx(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    name: \"date\",\n    label: \"Date\",\n    variant: \"filled\",\n    value: inputField.date,\n    onChange: event => handleChangeInput(index, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), __jsx(TextField, {\n    name: \"startTime\",\n    label: \"Start Time\",\n    variant: \"filled\",\n    value: inputField.startTime,\n    onChange: event => handleChangeInput(index, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), __jsx(TextField, {\n    name: \"charity_charityID\",\n    label: \"Charity ID\",\n    variant: \"filled\",\n    value: inputField.charity_charityID,\n    onChange: event => handleChangeInput(index, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), __jsx(TextField, {\n    name: \"parent_scheduleID\",\n    label: \"Schedule ID\",\n    variant: \"filled\",\n    value: inputField.Details.parent_scheduleID,\n    onChange: event => handleChangeInput(index, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), __jsx(TextField, {\n    name: \"volunteer_userID\",\n    label: \"Volunteer ID\",\n    variant: \"filled\",\n    value: inputField.volunteer_userID,\n    onChange: event => handleChangeInput(index, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), __jsx(TextField, {\n    name: \"beneficiary_beneficiaryID\",\n    label: \"Beneficiary ID\",\n    variant: \"filled\",\n    value: inputField.beneficiary_beneficiaryID,\n    onChange: event => handleChangeInput(index, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }), __jsx(TextField, {\n    name: \"Food_BasketID\",\n    label: \"Food ID\",\n    variant: \"filled\",\n    value: inputField.Food_BasketID,\n    onChange: event => handleChangeInput(index, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }), __jsx(IconButton, {\n    onClick: () => handleRemoveFields(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, __jsx(RemoveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  })), __jsx(IconButton, {\n    onClick: () => handleAddFields(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  })))), __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\" // endIcon={<Icon>send</Icon>}\n    // onClick={handleSubmit}\n    ,\n    onClick: postData(hardcode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, \"Post\")));\n}\n\nexport default Form;","map":{"version":3,"sources":["/mnt/d/G1T3-frontend/client/components/schedule/ScheduleForm.js"],"names":["React","useState","Component","Container","TextField","Button","IconButton","RemoveIcon","AddIcon","Icon","makeStyles","useStyles","theme","root","margin","spacing","button","Postt","postData","e","result","fetch","method","headers","body","JSON","stringify","console","log","Form","classes","inputFields","setInputFields","date","startTime","charity_charityID","Details","deliverStatus","parent_scheduleID","volunteer_userID","beneficiary_beneficiaryID","Food_BasketID","hardcode","posttoreview","postres","postresult","json","handleSubmit","preventDefault","handleChangeInput","index","event","values","target","name","value","handleAddFields","handleRemoveFields","splice","map","inputField"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport Icon from '@material-ui/core/Icon';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  button: {\n    margin: theme.spacing(1),\n  }\n\n}))\n\nclass Postt extends Component{\n  async postData(e) {\n    try{\n    // e.preventDefault();\n    // prevent page reload everytime form submission is done\n      let result = await fetch( \"https://cors-anywhere.herokuapp.com/https://smucf-dev-ebs-g1t3-srv.cfapps.us10.hana.ondemand.com/api/Schedule\", {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json' },\n          body: JSON.stringify(e)\n        });\n      \n    } catch(e){\n      console.log(e)\n    }\n  }\n}\n\n\nfunction Form() {\n\n\n  const classes = useStyles()\n  const [inputFields, setInputFields] = useState([\n    { date: '', startTime: '' , charity_charityID:'', Details: \n    [\n      {deliverStatus: \"NotCompleted\", \n      parent_scheduleID: '', \n      volunteer_userID: '', \n      beneficiary_beneficiaryID: '',\n      Food_BasketID: \"\"\n      }\n    ]},\n  ]);\n\n\n  const hardcode = { \n    \"date\" : \"2020-11-08\",\n    \"startTime\": \"9:00 AM\",\n    \"charity_charityID\" : \"charity001\",\n    \"Details\": [\n        {\n            \"deliverStatus\": \"NotCompleted\",\n            \"parent_scheduleID\": \"newtest\",\n            \"volunteer_userID\" : \"user001\",\n            \"beneficiary_beneficiaryID\" : \"bene001\",\n            \"Food_BasketID\": \"01\"\n        }\n    ]\n  }\n  async function posttoreview(e) {\n    const postres = await fetch(\n      \"https://cors-anywhere.herokuapp.com/https://smucf-dev-ebs-g1t3-srv.cfapps.us10.hana.ondemand.com/api/Schedule\",\n      {\n        method: 'POST', // or 'PUT'\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(e),\n      }\n    );\n    const postresult = await postres.json();\n    return postresult;\n  }\n  async function handleSubmit(e){\n    e.preventDefault();\n    // prevent page reload everytime form submission is done\n    console.log(\"InputFields\", inputFields);\n    \n    const result = await fetch( \"https://cors-anywhere.herokuapp.com/https://smucf-dev-ebs-g1t3-srv.cfapps.us10.hana.ondemand.com/api/Schedule\", {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json' },\n          body: JSON.stringify(inputFields),\n        });\n      \n    // } catch(e){\n    //   console.log(e)\n    // }\n  };\n\n  const handleChangeInput = (index, event) => {\n    const values = [...inputFields];\n    values[index][event.target.name] = event.target.value;\n    setInputFields(values);\n  }\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, \n      // { firstName: '', \n      // lastName: '', \n      // volunteer_userID: '', \n      // beneficiary_beneficiaryID:'' \n      // },\n      {date: '', startTime: '' , charity_charityID:'', Details: \n      [\n        {deliverStatus: \"NotCompleted\", \n        parent_scheduleID: '', \n        volunteer_userID: '', \n        beneficiary_beneficiaryID: '',\n        Food_BasketID: \"\"\n        }\n      ]}\n    ])\n  }\n\n  const handleRemoveFields = (index) => {\n    const values  = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  }\n  return (\n    <Container>\n\n      <form className = {classes.root}>\n      {inputFields.map((inputField, index) => (\n          <div key={index}>\n            <TextField \n              name=\"date\"\n              label=\"Date\"\n              variant=\"filled\"\n              value={inputField.date}\n              onChange={event => handleChangeInput(index, event)}\n            />\n            <TextField \n              name=\"startTime\"\n              label=\"Start Time\"\n              variant=\"filled\"\n              value={inputField.startTime}\n              onChange={event => handleChangeInput(index, event)}\n            />\n            <TextField \n              name=\"charity_charityID\"\n              label=\"Charity ID\"\n              variant=\"filled\"\n              value={inputField.charity_charityID}\n              onChange={event => handleChangeInput(index, event)}\n            />\n            <TextField \n              name=\"parent_scheduleID\"\n              label=\"Schedule ID\"\n              variant=\"filled\"\n              value={inputField.Details.parent_scheduleID}\n              onChange={event => handleChangeInput(index, event)}\n            />\n            <TextField \n              name=\"volunteer_userID\"\n              label=\"Volunteer ID\"\n              variant=\"filled\"\n              value={inputField.volunteer_userID}\n              onChange={event => handleChangeInput(index, event)}\n            />\n            <TextField \n              name=\"beneficiary_beneficiaryID\"\n              label=\"Beneficiary ID\"\n              variant=\"filled\"\n              value={inputField.beneficiary_beneficiaryID}\n              onChange={event => handleChangeInput(index, event)}\n            />\n            <TextField \n              name=\"Food_BasketID\"\n              label=\"Food ID\"\n              variant=\"filled\"\n              value={inputField.Food_BasketID}\n              onChange={event => handleChangeInput(index, event)}\n            />\n            \n            <IconButton\n              onClick={() => handleRemoveFields(index)}\n            >\n              <RemoveIcon />\n            </IconButton>\n            <IconButton\n              onClick={() => handleAddFields()}\n            >\n              <AddIcon />\n            </IconButton>\n          </div>\n      ))}\n      <Button \n        className={classes.button}\n        variant=\"contained\" \n        color=\"primary\" \n        type=\"submit\" \n        // endIcon={<Icon>send</Icon>}\n        // onClick={handleSubmit}\n        onClick={postData(hardcode)}\n      >Post</Button>\n\n      </form>\n\n        \n    </Container>\n  );\n}\n\nexport default Form;\n\n"]},"metadata":{},"sourceType":"module"}