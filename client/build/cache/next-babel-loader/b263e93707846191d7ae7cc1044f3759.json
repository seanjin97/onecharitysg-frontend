{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Grid, Container } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport MainCard from './Cards/MainCard.js';\nimport BasketCard from './Cards/BasketCard.js';\nimport StockCard from './Cards/StockCard.js';\nimport uuid from 'react-uuid';\nimport { TodayOutlined } from '@material-ui/icons';\n\nvar Basket = /*#__PURE__*/function (_Component) {\n  _inherits(Basket, _Component);\n\n  var _super = _createSuper(Basket);\n\n  function Basket(props) {\n    var _this;\n\n    _classCallCheck(this, Basket);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      basket: props.data.basket,\n      allStocks: props.data.allStocks,\n      basketItems: null,\n      selectedBasket: null,\n      editMode: false\n    };\n    _this.expandBasket = _this.expandBasket.bind(_assertThisInitialized(_this));\n    _this.resetShowBasket = _this.resetShowBasket.bind(_assertThisInitialized(_this));\n    _this.showAllStocks = _this.showAllStocks.bind(_assertThisInitialized(_this));\n    _this.handleIncrement = _this.handleIncrement.bind(_assertThisInitialized(_this));\n    _this.handleDecrement = _this.handleDecrement.bind(_assertThisInitialized(_this));\n    _this.saveBasket = _this.saveBasket.bind(_assertThisInitialized(_this));\n    _this.createBasket = _this.createBasket.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Basket, [{\n    key: \"resetShowBasket\",\n    value: function resetShowBasket() {\n      this.setState({\n        selectedBasket: null,\n        basketItems: null,\n        editMode: false\n      });\n    }\n  }, {\n    key: \"expandBasket\",\n    value: function expandBasket(item) {\n      this.setState({\n        basketItems: item.stocks,\n        selectedBasket: item.BasketID\n      });\n    }\n  }, {\n    key: \"showAllStocks\",\n    value: function showAllStocks() {\n      this.setState({\n        editMode: true\n      });\n    }\n  }, {\n    key: \"handleIncrement\",\n    value: function handleIncrement(item) {\n      var _this$state = this.state,\n          basketItems = _this$state.basketItems,\n          selectedBasket = _this$state.selectedBasket;\n\n      if (basketItems === null) {\n        return;\n      }\n\n      var id = item.stockID;\n      var itemExist = basketItems.filter(function (obj) {\n        return obj.stock_stockID === id;\n      });\n\n      if (itemExist && itemExist.length) {\n        var updatedBasket = basketItems.map(function (obj) {\n          if (obj.stock_stockID === id) {\n            return _objectSpread(_objectSpread({}, obj), {}, {\n              quantity: obj.quantity + 1\n            });\n          } else {\n            return obj;\n          }\n        });\n        this.setState({\n          basketItems: updatedBasket\n        });\n        return;\n      } else {\n        var updatedItem = {\n          quantity: 1,\n          basket_BasketID: selectedBasket,\n          stock_stockID: id,\n          stock_name: item.name\n        };\n\n        var _updatedBasket = [].concat(_toConsumableArray(basketItems), [updatedItem]);\n\n        this.setState({\n          basketItems: _updatedBasket\n        });\n        return;\n      }\n    }\n  }, {\n    key: \"handleDecrement\",\n    value: function handleDecrement(item) {\n      var _this$state2 = this.state,\n          basketItems = _this$state2.basketItems,\n          selectedBasket = _this$state2.selectedBasket,\n          editMode = _this$state2.editMode;\n\n      if (!editMode) {\n        return;\n      }\n\n      var id = item.stock_stockID;\n      var itemToUpdate = basketItems.filter(function (obj) {\n        return obj.stock_stockID === id;\n      })[0];\n\n      if (itemToUpdate.quantity === 1) {\n        var updatedBasket = basketItems.filter(function (obj) {\n          return obj.stock_stockID !== id;\n        });\n        this.setState({\n          basketItems: updatedBasket\n        });\n        return;\n      } else {\n        var _updatedBasket2 = basketItems.map(function (obj) {\n          if (obj.stock_stockID === id) {\n            return _objectSpread(_objectSpread({}, obj), {}, {\n              quantity: obj.quantity - 1\n            });\n          } else {\n            return obj;\n          }\n        });\n\n        this.setState({\n          basketItems: _updatedBasket2\n        });\n      }\n    }\n  }, {\n    key: \"saveBasket\",\n    value: function saveBasket() {\n      var _this$state3 = this.state,\n          basket = _this$state3.basket,\n          basketItems = _this$state3.basketItems,\n          selectedBasket = _this$state3.selectedBasket,\n          editMode = _this$state3.editMode;\n      var basketToUpdate = basket.find(function (item) {\n        return item.BasketID === selectedBasket;\n      });\n\n      var updatedBasket = _objectSpread(_objectSpread({}, basketToUpdate), {}, {\n        stocks: basketItems\n      });\n\n      var updatedAllBaskets = basket.map(function (item) {\n        if (item.BasketID === selectedBasket) {\n          return updatedBasket;\n        } else {\n          return item;\n        }\n      });\n      this.setState({\n        basket: updatedAllBaskets,\n        editMode: false\n      });\n    }\n  }, {\n    key: \"createBasket\",\n    value: function createBasket(e) {\n      if (e.key !== 'Enter') {\n        return;\n      }\n\n      var basket = this.state.basket;\n      console.log(basket);\n      var id = uuid.v4();\n      console.log(id); // TODO: create new basket\n    } // PUT API\n    // const url =\n    // \t'https://smucf-dev-ebs-g1t3-srv.cfapps.us10.hana.ondemand.com/api/Basket/' +\n    // \tselectedBasket;\n    // fetch(url, {\n    // \theaders: { 'Content-Type': 'application/json' },\n    // \tmethod: 'PUT',\n    // \tbody: JSON.stringify({\n    // \t\tBasketID: selectedBasket,\n    // \t\tname: basketToUpdate.name,\n    // \t\tstocks: basketToUpdate.stocks,\n    // \t}),\n    // });\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state4 = this.state,\n          basket = _this$state4.basket,\n          allStocks = _this$state4.allStocks,\n          basketItems = _this$state4.basketItems,\n          editMode = _this$state4.editMode;\n      return __jsx(\"div\", {\n        className: \"container mx-auto px-4 sm:px-8 mt-18 flex-grow h-full\"\n      }, __jsx(\"div\", {\n        className: \"py-8 flex-grow flex-col flex bg-white shadow-lg rounded px-8 pt-6 pb-8 mb-4 mt-4 h-auto\"\n      }, __jsx(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        spacing: 4,\n        className: \"flex flex-row\"\n      }, __jsx(Grid, {\n        item: true\n      }, __jsx(MainCard, {\n        onClick: this.expandBasket,\n        clickReset: this.resetShowBasket,\n        data: basket,\n        createBasket: this.createBasket\n      }, \"Presets\")), __jsx(Grid, {\n        item: true\n      }, __jsx(BasketCard, {\n        onClickEdit: this.showAllStocks,\n        onClickRemove: this.handleDecrement,\n        onClickSave: this.saveBasket,\n        data: basketItems\n      }, \"Food Items\")), __jsx(Grid, {\n        item: true\n      }, __jsx(StockCard, {\n        increment: this.handleIncrement,\n        checker: editMode,\n        data: allStocks\n      }, \"All Stocks\")))));\n    }\n  }]);\n\n  return Basket;\n}(Component);\n\nexport default Basket;","map":null,"metadata":{},"sourceType":"module"}