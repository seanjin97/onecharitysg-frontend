{"ast":null,"code":"var _jsxFileName = \"/Users/seanjin/Documents/EBS/project/G1T3-frontend/client/providers/Auth.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react'; // set context\n\nconst AuthContext = /*#__PURE__*/React.createContext({\n  name: null,\n  role: null,\n  isAuthenticated: false,\n  isLoading: true // setAuthenticated: () => {},\n\n}); // wraps around children component and add context\n\nexport const AuthProvider = ({\n  children\n}) => {\n  const [name, setName] = React.useState(null);\n  const [role, setRole] = React.useState(null);\n  const [isAuthenticated, setAuthenticated] = React.useState(false);\n  const [isLoading, setLoading] = React.useState(true);\n\n  const setAuth = value => setAuthenticated(value); // verify cookie against server\n\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      if (isAuthenticated) {\n        console.log('already authenticated');\n        return;\n      }\n\n      try {\n        // const response = await fetch('http://localhost:8080/mylocalfunction/', {credentials: 'include'});\n        // const response = await fetch('http://localhost:5000/api/auth/verify', {credentials: 'include'});\n        //const response = await fetch('https://67590a5d-49be-4eb3-a302-c90be94feb62-faas-http.tenant.us10.functions.xfs.cloud.sap/mylocalhttptrigger/', {credentials: 'include'});\n        const response = await fetch('/api/auth/verify', {\n          credentials: 'include'\n        });\n\n        if (response.status === 200) {\n          console.log('server okay');\n          const data = await response.json();\n          setAuthenticated(true);\n          setLoading(false);\n          setName(data.name);\n          let role = data.role;\n          setRole(role);\n        } else {\n          // console.log(response.statusText);\n          console.log('not authenticated');\n          setLoading(false);\n        }\n      } catch (error) {\n        console.log('server might be down');\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n  }, []);\n  return __jsx(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      isLoading,\n      name,\n      role,\n      setAuth,\n      setName,\n      setRole\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, children);\n};\nexport function useAuth() {\n  const context = React.useContext(AuthContext);\n\n  if (context === undefined) {\n    throw new Error('missing AuthProvider');\n  }\n\n  return context;\n}\nexport function useIsAuthenticated() {\n  const context = useAuth();\n  return context.isAuthenticated;\n}\nexport function getName() {\n  const context = useAuth();\n  return context.name;\n}\nexport function getRole() {\n  const context = useAuth();\n  return context.role;\n}","map":{"version":3,"sources":["/Users/seanjin/Documents/EBS/project/G1T3-frontend/client/providers/Auth.js"],"names":["React","useEffect","AuthContext","createContext","name","role","isAuthenticated","isLoading","AuthProvider","children","setName","useState","setRole","setAuthenticated","setLoading","setAuth","value","initializeAuth","console","log","response","fetch","credentials","status","data","json","error","useAuth","context","useContext","undefined","Error","useIsAuthenticated","getName","getRole"],"mappings":"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","sourcesContent":["\nimport React, { useEffect } from 'react';\n\n// set context\nconst AuthContext = React.createContext({\n\tname: null,\n\trole: null,\n\tisAuthenticated: false,\n\tisLoading: true,\n\t// setAuthenticated: () => {},\n});\n\n// wraps around children component and add context\nexport const AuthProvider = ({ children }) => {\n\tconst [name, setName] = React.useState(null);\n\tconst [role, setRole] = React.useState(null);\n\tconst [isAuthenticated, setAuthenticated] = React.useState(false);\n\tconst [isLoading, setLoading] = React.useState(true);\n\t\n\tconst setAuth = (value) => setAuthenticated(value);\n\n\t// verify cookie against server\n\tuseEffect(() => {\n\t\tconst initializeAuth = async () => {\n\t\t\tif (isAuthenticated) {\n\t\t\t\tconsole.log('already authenticated');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\t// const response = await fetch('http://localhost:8080/mylocalfunction/', {credentials: 'include'});\n\t\t\t\t// const response = await fetch('http://localhost:5000/api/auth/verify', {credentials: 'include'});\n\t\t\t\t//const response = await fetch('https://67590a5d-49be-4eb3-a302-c90be94feb62-faas-http.tenant.us10.functions.xfs.cloud.sap/mylocalhttptrigger/', {credentials: 'include'});\n\t\t\t\tconst response = await fetch('/api/auth/verify', {credentials: 'include'});\n\n\t\t\t\tif (response.status === 200) {\n\t\t\t\t\tconsole.log('server okay');\n\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\tsetAuthenticated(true);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t\tsetName(data.name);\n\t\t\t\t\tlet role = data.role;\n\t\t\t\t\tsetRole(role);\n\n\t\t\t\t} else {\n\t\t\t\t\t// console.log(response.statusText);\n\t\t\t\t\tconsole.log('not authenticated');\n\t\t\t\t\tsetLoading(false);\n\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('server might be down');\n\t\t\t\tsetLoading(false);\n\n\t\t\t}\n\t\t};\n\t\tinitializeAuth();\n\t}, []);\n\n\treturn (\n\t\t<AuthContext.Provider value={{ isAuthenticated, isLoading, name, role, setAuth, setName, setRole }}>\n\t\t\t{children}\n\t\t</AuthContext.Provider>\n\t);\n};\n\nexport function useAuth() {\n\tconst context = React.useContext(AuthContext);\n\tif (context === undefined) {\n\t\tthrow new Error('missing AuthProvider');\n\t}\n\treturn context;\n}\n\nexport function useIsAuthenticated() {\n\tconst context = useAuth();\n\treturn context.isAuthenticated;\n}\n\nexport function getName() {\n\tconst context = useAuth();\n\treturn context.name;\n}\n\nexport function getRole() {\n\tconst context = useAuth();\n\treturn context.role;\n}"]},"metadata":{},"sourceType":"module"}