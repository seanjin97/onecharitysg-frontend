{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useTable, usePagination } from 'react-table';\nconst firstNames = ['jane', 'john', 'alex'];\nconst lastName = ['smith', 'jones'];\nconst data = Array(100).fill().map(a => ({\n  firstName: firstNames[Math.floor(Math.random() * firstNames.length)],\n  lastName: lastName[Math.floor(Math.random() * lastName.length)],\n  age: Math.ceil(75 * Math.random())\n}));\nconst columns = [{\n  Header: 'Name',\n  columns: [{\n    Header: 'First Name',\n    accessor: 'firstName'\n  }, {\n    Header: 'Last Name',\n    accessor: 'lastName'\n  }]\n}, {\n  Header: 'Other Info',\n  columns: [{\n    Header: 'Age',\n    accessor: 'age'\n  }]\n}];\n\nconst Table = ({\n  columns,\n  data\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0\n    }\n  }, usePagination);\n  return __jsx(React.Fragment, null, __jsx(\"table\", getTableProps(), __jsx(\"thead\", null, headerGroups.map(headerGroup => __jsx(\"tr\", headerGroup.getHeaderGroupProps(), headerGroup.headers.map(column => __jsx(\"th\", column.getHeaderProps(), column.render('Header')))))), __jsx(\"tbody\", getTableBodyProps(), page.map((row, i) => {\n    prepareRow(row);\n    return __jsx(\"tr\", row.getRowProps(), row.cells.map(cell => {\n      return __jsx(\"td\", cell.getCellProps(), cell.render('Cell'));\n    }));\n  }))), __jsx(\"div\", null, __jsx(\"button\", {\n    onClick: () => gotoPage(0),\n    disabled: !canPreviousPage\n  }, '<<'), ' ', __jsx(\"button\", {\n    onClick: () => previousPage(),\n    disabled: !canPreviousPage\n  }, '<'), ' ', __jsx(\"button\", {\n    onClick: () => nextPage(),\n    disabled: !canNextPage\n  }, '>'), ' ', __jsx(\"button\", {\n    onClick: () => gotoPage(pageCount - 1),\n    disabled: !canNextPage\n  }, '>>'), ' ', __jsx(\"span\", null, \"Page\", ' ', __jsx(\"strong\", null, pageIndex + 1, \" of \", pageOptions.length), ' '), __jsx(\"span\", null, \"| Go to page:\", ' ', __jsx(\"input\", {\n    type: \"number\",\n    defaultValue: pageIndex + 1,\n    onChange: e => {\n      const page = e.target.value ? Number(e.target.value) - 1 : 0;\n      gotoPage(page);\n    },\n    style: {\n      width: '100px'\n    }\n  })), ' ', __jsx(\"select\", {\n    value: pageSize,\n    onChange: e => {\n      setPageSize(Number(e.target.value));\n    }\n  }, [10, 20, 30, 40, 50].map(pageSize => __jsx(\"option\", {\n    key: pageSize,\n    value: pageSize\n  }, \"Show \", pageSize)))));\n};\n\nexport default function App() {\n  return __jsx(\"div\", {\n    className: \"App\"\n  }, __jsx(Table, {\n    columns: columns,\n    data: data\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}