{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport SearchFilter from './SearchFilter';\nimport { columns } from './Init';\nimport { useTable, useSortBy, useFilters, useGlobalFilter, usePagination } from 'react-table';\nimport React from 'react';\nimport TableHeader from './TableHeader';\nimport TableBody from './TableBody';\nimport Tablefooter from './TableFooter'; //https://www.tailwindtoolbox.com/components/responsive-table\n//https://blog.logrocket.com/building-styling-tables-react-table-v7/\n//https://codesandbox.io/s/react-table-7-sort-cpvwe?file=/src/RTable.js\n//https://medium.com/@blaiseiradukunda/react-table-7-tutorial-3d8ba6ac8b16\n\nexport default function Table({\n  odata,\n  send\n}) {\n  let count = odata.length;\n  let data = odata; // console.log(data);\n\n  const Table = ({\n    columns,\n    data\n  }) => {\n    const filterTypes = React.useMemo(() => ({\n      text: (rows, id, filterValue) => {\n        return rows.filter(row => {\n          const rowValue = row.values[id];\n          return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n        });\n      }\n    }), []);\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow,\n      setGlobalFilter,\n      page,\n      canPreviousPage,\n      canNextPage,\n      pageOptions,\n      pageCount,\n      gotoPage,\n      nextPage,\n      previousPage,\n      setPageSize,\n      state: {\n        pageIndex,\n        pageSize\n      }\n    } = useTable({\n      columns,\n      data,\n      filterTypes,\n      initialState: {\n        pageIndex: 0 // hiddenColumns: ['beneficiaryID']\n\n      }\n    }, useFilters, useGlobalFilter, useSortBy, usePagination);\n    return __jsx(\"div\", null, __jsx(SearchFilter, {\n      setFilter: setGlobalFilter,\n      goPrev: previousPage,\n      pageCount: pageCount,\n      pageSize: pageSize,\n      setPageSize: setPageSize,\n      canPrev: canPreviousPage,\n      goNext: nextPage,\n      canNext: canNextPage,\n      pageIndex: pageIndex,\n      pageOptionsLength: pageOptions.length\n    }), __jsx(\"table\", _extends({}, getTableProps(), {\n      className: \"w-full table-fixed\"\n    }), __jsx(TableHeader, _extends({\n      headerGroups: headerGroups\n    }, getTableBodyProps())), __jsx(TableBody, _extends({\n      page: page,\n      prepareRow: prepareRow\n    }, getTableBodyProps(), {\n      send: send\n    }))), __jsx(Tablefooter, {\n      count: count\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"py-8 flex-grow flex-col flex justify-center bg-white shadow-lg rounded px-8 pt-6 pb-8 mb-4 mt-4\"\n  }, __jsx(\"h2\", {\n    className: \"text-2xl font-semibold leading-tigh text-left\"\n  }, \"Beneficiaries Data\"), __jsx(Table, {\n    columns: columns,\n    data: odata\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}