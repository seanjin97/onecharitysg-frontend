{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport Alert from \"./alerts/Alert\";\nimport GreenAlert from \"./alerts/GreenAlert\";\n\nclass RegisterForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"closeAlert\", e => {\n      this.setState({\n        'error': false,\n        'register': false\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      let id = e.target.getAttribute('id');\n\n      if (id == 'email') {\n        this.setState({\n          'email': e.target.value\n        });\n      } else if (id == 'name') {\n        this.setState({\n          'name': e.target.value\n        });\n      } else if (id == 'register-password') {\n        this.setState({\n          'password': e.target.value\n        });\n      }\n\n      ;\n    });\n\n    _defineProperty(this, \"handleSubmit\", async e => {\n      this.props.setLoading();\n      e.preventDefault();\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"email\": this.state.email,\n          \"name\": this.state.name,\n          \"password\": this.state.password\n        }),\n        credentials: \"include\"\n      };\n\n      try {\n        const response = await fetch(this.state.url, requestOptions);\n        const data = await response.json();\n\n        if (response.ok) {\n          this.setState({\n            'register': true\n          });\n          console.log('prompt');\n        } else {\n          // invalid params\n          console.log(data.status);\n          this.setState({\n            'error': true,\n            'status': \"Email already exist!\"\n          });\n        }\n      } catch (error) {\n        this.props.displayAlert;\n        console.log(error);\n        this.setState({\n          'error': true,\n          'status': \"Register server might be down!\"\n        });\n      }\n\n      this.props.stopLoading();\n    });\n\n    this.state = {\n      // 'url': 'https://g1t3-node-auth-srv.cfapps.us10.hana.ondemand.com/api/register',\n      // 'url': 'http://localhost:5000/api/register',\n      'url': '/api/register',\n      'email': null,\n      'name': null,\n      'password': null,\n      'error': false,\n      'status': null,\n      'loading': false,\n      'register': false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return __jsx(\"div\", null, this.state.error ? __jsx(Alert, {\n      status: this.state.status,\n      close: this.closeAlert\n    }) : null, this.state.register ? __jsx(GreenAlert, {\n      status: this.state.status,\n      close: this.closeAlert\n    }) : null, __jsx(\"form\", {\n      onSubmit: this.handleSubmit\n    }, __jsx(\"div\", {\n      className: \"mb-4\"\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\"\n    }, \"Email\"), __jsx(\"input\", {\n      required: true,\n      onChange: this.handleChange,\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"email\",\n      type: \"email\",\n      placeholder: \"Email\"\n    })), __jsx(\"div\", {\n      className: \"mb-4\"\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\"\n    }, \"Name\"), __jsx(\"input\", {\n      required: true,\n      onChange: this.handleChange,\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"name\",\n      type: \"text\",\n      placeholder: \"Name\"\n    })), __jsx(\"div\", {\n      className: \"mb-6\"\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\"\n    }, \"Password\"), __jsx(\"input\", {\n      required: true,\n      onChange: this.handleChange,\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"register-password\",\n      type: \"password\",\n      placeholder: \"******************\",\n      autoComplete: \"off\"\n    }), __jsx(\"p\", {\n      className: \"text-red-500 text-xs italic hidden\"\n    }, \"Please choose a password.\")), __jsx(\"div\", {\n      className: \"mb-6\"\n    }, __jsx(\"input\", {\n      className: \"cursor-pointer w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n      type: \"submit\",\n      id: \"signup\",\n      name: \"register\",\n      value: \"Register\"\n    }), __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      className: \"lg:flex lg:justify-center font-bold text-sm text-blue-500 hover:text-blue-800 mt-5\",\n      href: \"#\"\n    }, \"Forgot Password?\")))));\n  }\n\n}\n\nexport default RegisterForm;","map":null,"metadata":{},"sourceType":"module"}