{"ast":null,"code":"var _jsxFileName = \"/Users/seanjin/Documents/EBS/project/G1T3-frontend/client/components/front/RegisterForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport Alert from \"./alerts/Alert\";\nimport GreenAlert from \"./alerts/GreenAlert\";\n\nclass RegisterForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"closeAlert\", e => {\n      this.setState({\n        'error': false,\n        'register': false\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      let id = e.target.getAttribute('id');\n\n      if (id == 'email') {\n        this.setState({\n          'email': e.target.value\n        });\n      } else if (id == 'name') {\n        this.setState({\n          'name': e.target.value\n        });\n      } else if (id == 'register-password') {\n        this.setState({\n          'password': e.target.value\n        });\n      }\n\n      ;\n    });\n\n    _defineProperty(this, \"handleSubmit\", async e => {\n      this.props.setLoading();\n      e.preventDefault();\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"email\": this.state.email,\n          \"name\": this.state.name,\n          \"password\": this.state.password\n        }),\n        credentials: \"include\"\n      };\n\n      try {\n        const response = await fetch(this.state.url, requestOptions);\n        const data = await response.json();\n\n        if (response.ok) {\n          this.setState({\n            'register': true\n          });\n          console.log('prompt');\n        } else {\n          // invalid params\n          console.log(data.status);\n          this.setState({\n            'error': true,\n            'status': \"Email already exist!\"\n          });\n        }\n      } catch (error) {\n        this.props.displayAlert;\n        console.log(error);\n        this.setState({\n          'error': true,\n          'status': \"Register server might be down!\"\n        });\n      }\n\n      this.props.stopLoading();\n    });\n\n    this.state = {\n      // 'url': 'https://g1t3-node-auth-srv.cfapps.us10.hana.ondemand.com/api/register',\n      // 'url': 'http://localhost:5000/api/register',\n      'url': '/api/register',\n      'email': null,\n      'name': null,\n      'password': null,\n      'error': false,\n      'status': null,\n      'loading': false,\n      'register': false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, this.state.error ? __jsx(Alert, {\n      status: this.state.status,\n      close: this.closeAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 38\n      }\n    }) : null, this.state.register ? __jsx(GreenAlert, {\n      status: this.state.status,\n      close: this.closeAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 41\n      }\n    }) : null, __jsx(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"Email\"), __jsx(\"input\", {\n      required: true,\n      onChange: this.handleChange,\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Name\"), __jsx(\"input\", {\n      required: true,\n      onChange: this.handleChange,\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"name\",\n      type: \"text\",\n      placeholder: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"Password\"), __jsx(\"input\", {\n      required: true,\n      onChange: this.handleChange,\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"register-password\",\n      type: \"password\",\n      placeholder: \"******************\",\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }), __jsx(\"p\", {\n      className: \"text-red-500 text-xs italic hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, \"Please choose a password.\")), __jsx(\"div\", {\n      className: \"mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      className: \"cursor-pointer w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n      type: \"submit\",\n      id: \"signup\",\n      name: \"register\",\n      value: \"Register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }), __jsx(Link, {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      className: \"lg:flex lg:justify-center font-bold text-sm text-blue-500 hover:text-blue-800 mt-5\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 36\n      }\n    }, \"Forgot Password?\")))));\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/seanjin/Documents/EBS/project/G1T3-frontend/client/components/front/RegisterForm.js"],"names":["Link","Alert","GreenAlert","RegisterForm","React","Component","constructor","props","e","setState","id","target","getAttribute","value","setLoading","preventDefault","requestOptions","method","headers","body","JSON","stringify","state","email","name","password","credentials","response","fetch","url","data","json","ok","console","log","status","error","displayAlert","stopLoading","handleChange","bind","handleSubmit","render","closeAlert","register"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport Alert from \"./alerts/Alert\";\nimport GreenAlert from \"./alerts/GreenAlert\";\n\nclass RegisterForm extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            // 'url': 'https://g1t3-node-auth-srv.cfapps.us10.hana.ondemand.com/api/register',\n            // 'url': 'http://localhost:5000/api/register',\n            'url': '/api/register',\n            'email': null,\n            'name': null,\n            'password': null,\n            'error': false,\n            'status': null,\n            'loading': false,\n            'register': false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    closeAlert = (e) => {\n        this.setState({\n            'error': false,\n            'register': false\n        })\n    }\n\n    handleChange = (e) => {\n        let id = e.target.getAttribute('id'); \n\n        if (id == 'email') {\n            this.setState({\n                'email': e.target.value\n            });\n        } \n        else if (id == 'name') {\n            this.setState({\n                'name': e.target.value\n            });\n        }\n        else if (id == 'register-password') {\n            this.setState({\n                'password': e.target.value\n            });\n        };\n    }\n\n    handleSubmit = async (e) => {\n        this.props.setLoading();\n\n        e.preventDefault();\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                \"email\": this.state.email,\n                \"name\" : this.state.name,\n                \"password\": this.state.password\n            }),\n            credentials: \"include\",\n        };\n\n        try {\n            const response = await fetch(this.state.url, requestOptions);\n            const data = await response.json();\n            \n            if (response.ok) {\n                this.setState({\n                    'register': true\n                })\n                console.log('prompt');\n            }\n            else {\n                // invalid params\n                console.log(data.status);\n                this.setState({\n                    'error': true,\n                    'status': \"Email already exist!\"\n                });\n            }\n        } catch (error) {\n            this.props.displayAlert;\n            console.log(error);\n            this.setState({\n                'error': true,\n                'status': \"Register server might be down!\"\n            });\n        }\n        this.props.stopLoading();\n    }   \n\n    render () {\n        return (\n            <div>\n                { this.state.error ? <Alert status={this.state.status} close={this.closeAlert}/> : null }\n                { this.state.register ? <GreenAlert status={this.state.status} close={this.closeAlert}/> : null }\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"mb-4\">\n                    <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                        Email\n                    </label>\n                    <input required onChange={this.handleChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"email\" type=\"email\" placeholder=\"Email\" />\n                </div>\n                \n                <div className=\"mb-4\">\n                    <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                        Name\n                    </label>\n                    <input required onChange={this.handleChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"Name\" />\n                </div>\n\n                <div className=\"mb-6\">\n                    <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                        Password\n                    </label>\n                    <input required onChange={this.handleChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" id=\"register-password\" type=\"password\" placeholder=\"******************\" autoComplete=\"off\"/>\n                    <p className=\"text-red-500 text-xs italic hidden\">Please choose a password.</p>\n                </div>\n\n                <div className=\"mb-6\">\n                    <input className=\"cursor-pointer w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"submit\" id=\"signup\" name=\"register\" value=\"Register\" />\n                    <Link href=\"#\"><a className=\"lg:flex lg:justify-center font-bold text-sm text-blue-500 hover:text-blue-800 mt-5\" href=\"#\">Forgot Password?</a></Link>\n                </div>\n            </form>\n            </div>\n        )\n    }\n}\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}