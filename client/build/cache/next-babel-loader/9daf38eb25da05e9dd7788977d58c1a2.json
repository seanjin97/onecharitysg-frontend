{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../providers/Auth\"; // components rendering twice is because of strict mode\n\nfunction DefaultLoadingFallback() {\n  return __jsx(\"p\", null, \"Loading...\");\n}\n\nexport default function withAuthRedirect({\n  WrappedComponent,\n  LoadingComponent = DefaultLoadingFallback,\n  expectedAuth,\n  location\n}) {\n  const WithAuthRedirectWrapper = props => {\n    const router = useRouter();\n    const {\n      isLoading,\n      isAuthenticated\n    } = useAuth();\n\n    if (isLoading) {\n      return __jsx(LoadingComponent, null);\n    }\n\n    if (false && expectedAuth !== isAuthenticated) {\n      console.log(\"logged in? \" + isAuthenticated);\n      router.push(location);\n      return __jsx(React.Fragment, null);\n    }\n\n    return __jsx(WrappedComponent, props);\n  };\n\n  return WithAuthRedirectWrapper;\n}","map":null,"metadata":{},"sourceType":"module"}