{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport Alert from \"./alerts/Alert\";\nimport { useAuth } from '../../providers/Auth';\nimport { useState } from 'react';\nexport default function LoginForm(_ref) {\n  var setLoading = _ref.setLoading,\n      stopLoading = _ref.stopLoading;\n\n  var _useState = useState(null),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(null),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var _useState4 = useState(null),\n      status = _useState4[0],\n      setStatus = _useState4[1]; //const url = 'https://g1t3-node-auth-srv.cfapps.us10.hana.ondemand.com/api/login';\n  //const url = 'http://localhost:5000/api/login';\n\n\n  var url = '/api/login';\n  var auth = useAuth();\n\n  var closeAlert = function closeAlert(e) {\n    setError(false);\n  };\n\n  var handleChange = function handleChange(e) {\n    var id = e.target.getAttribute('id');\n\n    if (id == 'email') {\n      setEmail(e.target.value);\n    } else if (id == 'login-password') {\n      setPassword(e.target.value);\n    }\n\n    ;\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var requestOptions, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading();\n              e.preventDefault();\n              requestOptions = {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include',\n                body: JSON.stringify({\n                  \"email\": email,\n                  \"password\": password\n                })\n              };\n              _context.prev = 3;\n              _context.next = 6;\n              return fetch(url, requestOptions);\n\n            case 6:\n              response = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 18;\n                break;\n              }\n\n              _context.next = 10;\n              return response.json();\n\n            case 10:\n              data = _context.sent;\n              console.log(\"logged in!\");\n              auth.setName(data.email);\n              auth.setRole(data.role);\n              auth.setAuth(true);\n              Router.push('/home');\n              _context.next = 20;\n              break;\n\n            case 18:\n              // invalid params\n              setError(true);\n              setStatus('Wrong email or password!');\n\n            case 20:\n              _context.next = 26;\n              break;\n\n            case 22:\n              _context.prev = 22;\n              _context.t0 = _context[\"catch\"](3);\n              setError(true);\n              setStatus('Auth server might be down!');\n\n            case 26:\n              stopLoading();\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 22]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var wrapperFunction = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              handleSubmit(e);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function wrapperFunction(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", null, error ? __jsx(Alert, {\n    status: status,\n    close: closeAlert\n  }) : null, __jsx(\"form\", {\n    onSubmit: wrapperFunction\n  }, __jsx(\"div\", {\n    className: \"mb-4\"\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\"\n  }, \"Email\"), __jsx(\"input\", {\n    required: true,\n    onChange: handleChange,\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email\"\n  })), __jsx(\"div\", {\n    className: \"mb-6\"\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\"\n  }, \"Password\"), __jsx(\"input\", {\n    required: true,\n    onChange: handleChange,\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"login-password\",\n    type: \"password\",\n    placeholder: \"******************\",\n    autoComplete: \"off\"\n  }), __jsx(\"p\", {\n    className: \"text-red-500 text-xs italic hidden\"\n  }, \"Please choose a password.\")), __jsx(\"div\", {\n    className: \"mb-6\"\n  }, __jsx(\"input\", {\n    className: \"cursor-pointer w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n    type: \"submit\",\n    id: \"login\",\n    name: \"login\",\n    value: \"Login\"\n  }), __jsx(\"p\", {\n    className: \"lg:flex lg:justify-center font-bold text-sm text-blue-500 hover:text-blue-800 mt-5\",\n    href: \"#\"\n  }, \"Forgot Password?\"))));\n}","map":null,"metadata":{},"sourceType":"module"}